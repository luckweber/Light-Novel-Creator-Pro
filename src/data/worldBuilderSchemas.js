// Esquemas centralizados para World Builder
// Este arquivo define a estrutura de dados para todos os tipos de itens
// e √© usado tanto pelo UniversalFormModal quanto pelo unifiedPromptIntegration

export const WORLD_BUILDER_SCHEMAS = {
  // Esquema para Marco (Landmark)
  landmark: {
    title: 'Marco',
    icon: 'üèõÔ∏è',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      significance: { type: 'textarea', label: 'Significado', required: false },
      location: { type: 'text', label: 'Localiza√ß√£o', required: false },
      history: { type: 'textarea', label: 'Hist√≥ria', required: false },
      features: { type: 'textarea', label: 'Caracter√≠sticas', required: false },
      accessibility: { type: 'text', label: 'Acessibilidade', required: false },
      legends: { type: 'textarea', label: 'Lendas', required: false },
      visitors: { type: 'text', label: 'Visitantes', required: false }
    }
  },

  // Esquema para Local (Location)
  location: {
    title: 'Local',
    icon: 'üìç',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      climate: { type: 'text', label: 'Clima', required: false },
      population: { type: 'text', label: 'Popula√ß√£o', required: false },
      culture: { type: 'text', label: 'Cultura', required: false },
      government: { type: 'text', label: 'Governo', required: false },
      economy: { type: 'text', label: 'Economia', required: false },
      pointsOfInterest: { type: 'array', label: 'Pontos de Interesse', required: false },
      atmosphere: { type: 'text', label: 'Atmosfera', required: false },
      secrets: { type: 'textarea', label: 'Segredos', required: false }
    }
  },

  // Esquema para Sistema M√°gico (Magic System)
  magicSystem: {
    title: 'Sistema M√°gico',
    icon: '‚ú®',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      rules: { type: 'textarea', label: 'Regras', required: false },
      source: { type: 'text', label: 'Fonte de Poder', required: false },
      limitations: { type: 'textarea', label: 'Limita√ß√µes', required: false }
    }
  },

  // Esquema para Idioma (Language)
  language: {
    title: 'Idioma',
    icon: 'üó£Ô∏è',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      family: { type: 'text', label: 'Fam√≠lia Lingu√≠stica', required: false },
      speakers: { type: 'text', label: 'Falantes', required: false },
      script: { type: 'text', label: 'Sistema de Escrita', required: false },
      examples: { type: 'object', label: 'Exemplos', required: false },
      dialects: { type: 'object', label: 'Dialetos', required: false },
      culturalInfluence: { type: 'textarea', label: 'Influ√™ncia Cultural', required: false },
      socialStatus: { type: 'text', label: 'Status Social', required: false },
      evolution: { type: 'textarea', label: 'Evolu√ß√£o', required: false }
    }
  },

  // Esquema para Povo (People)
  people: {
    title: 'Povo',
    icon: 'üë•',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      physicalTraits: { type: 'textarea', label: 'Tra√ßos F√≠sicos', required: false },
      culture: { type: 'textarea', label: 'Cultura', required: false },
      socialStructure: { type: 'textarea', label: 'Estrutura Social', required: false },
      specialAbilities: { type: 'textarea', label: 'Habilidades Especiais', required: false },
      relationships: { type: 'textarea', label: 'Relacionamentos', required: false },
      history: { type: 'textarea', label: 'Hist√≥ria', required: false },
      values: { type: 'textarea', label: 'Valores', required: false },
      territory: { type: 'text', label: 'Territ√≥rio', required: false },
      population: { type: 'text', label: 'Popula√ß√£o', required: false },
      language: { type: 'text', label: 'Idioma', required: false },
      religion: { type: 'text', label: 'Religi√£o', required: false },
      technology: { type: 'text', label: 'Tecnologia', required: false },
      economy: { type: 'text', label: 'Economia', required: false },
      conflicts: { type: 'textarea', label: 'Conflitos', required: false }
    }
  },

  // Esquema para Religi√£o (Religion)
  religion: {
    title: 'Religi√£o',
    icon: '‚õ™',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: false },
      deities: { type: 'textarea', label: 'Divindades', required: false },
      dogmas: { type: 'textarea', label: 'Dogmas', required: false },
      rituals: { type: 'textarea', label: 'Rituais', required: false },
      hierarchy: { type: 'textarea', label: 'Hierarquia', required: false },
      sacredPlaces: { type: 'textarea', label: 'Locais Sagrados', required: false },
      sacredTexts: { type: 'textarea', label: 'Textos Sagrados', required: false },
      festivals: { type: 'textarea', label: 'Festivais', required: false },
      relationships: { type: 'textarea', label: 'Rela√ß√µes', required: false },
      impact: { type: 'textarea', label: 'Impacto', required: false },
      secrets: { type: 'textarea', label: 'Segredos', required: false }
    }
  },

  // Esquema para Tradi√ß√£o (Tradition)
  tradition: {
    title: 'Tradi√ß√£o',
    icon: 'üé≠',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: false },
      origin: { type: 'textarea', label: 'Origem', required: false },
      practice: { type: 'textarea', label: 'Pr√°tica', required: false },
      meaning: { type: 'textarea', label: 'Significado', required: false },
      participants: { type: 'text', label: 'Participantes', required: false },
      frequency: { type: 'text', label: 'Frequ√™ncia', required: false },
      symbols: { type: 'textarea', label: 'S√≠mbolos', required: false },
      variations: { type: 'textarea', label: 'Varia√ß√µes', required: false },
      importance: { type: 'textarea', label: 'Import√¢ncia', required: false },
      evolution: { type: 'textarea', label: 'Evolu√ß√£o', required: false },
      conflicts: { type: 'textarea', label: 'Conflitos', required: false }
    }
  },

  // Esquema para Evento (Event)
  event: {
    title: 'Evento',
    icon: 'üìÖ',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      date: { type: 'text', label: 'Data', required: false },
      location: { type: 'text', label: 'Local', required: false },
      characters: { type: 'textarea', label: 'Personagens', required: false },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      causes: { type: 'textarea', label: 'Causas', required: false },
      consequences: { type: 'textarea', label: 'Consequ√™ncias', required: false },
      impact: { type: 'textarea', label: 'Impacto', required: false },
      legacy: { type: 'textarea', label: 'Legado', required: false },
      sources: { type: 'textarea', label: 'Fontes', required: false },
      controversies: { type: 'textarea', label: 'Controv√©rsias', required: false },
      lessons: { type: 'textarea', label: 'Li√ß√µes', required: false }
    }
  },

  // Esquema para Era (Era)
  era: {
    title: 'Era',
    icon: '‚è∞',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      startYear: { type: 'text', label: 'Ano de In√≠cio', required: false },
      endYear: { type: 'text', label: 'Ano de Fim', required: false },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      characteristics: { type: 'textarea', label: 'Caracter√≠sticas', required: false },
      majorEvents: { type: 'textarea', label: 'Eventos Principais', required: false },
      keyFigures: { type: 'textarea', label: 'Figuras Importantes', required: false },
      culturalChanges: { type: 'textarea', label: 'Mudan√ßas Culturais', required: false },
      technologicalAdvances: { type: 'textarea', label: 'Avan√ßos Tecnol√≥gicos', required: false },
      socialStructures: { type: 'textarea', label: 'Estruturas Sociais', required: false },
      conflicts: { type: 'textarea', label: 'Conflitos', required: false },
      achievements: { type: 'textarea', label: 'Conquistas', required: false },
      legacy: { type: 'textarea', label: 'Legado', required: false },
      transition: { type: 'textarea', label: 'Transi√ß√£o', required: false }
    }
  },

  // Esquema para Regi√£o (Region)
  region: {
    title: 'Regi√£o',
    icon: 'üó∫Ô∏è',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      geography: { type: 'textarea', label: 'Geografia', required: false },
      climate: { type: 'text', label: 'Clima', required: false },
      population: { type: 'text', label: 'Popula√ß√£o', required: false },
      government: { type: 'text', label: 'Governo', required: false },
      economy: { type: 'text', label: 'Economia', required: false },
      culture: { type: 'textarea', label: 'Cultura', required: false },
      history: { type: 'textarea', label: 'Hist√≥ria', required: false },
      borders: { type: 'textarea', label: 'Fronteiras', required: false },
      resources: { type: 'textarea', label: 'Recursos', required: false },
      conflicts: { type: 'textarea', label: 'Conflitos', required: false }
    }
  },

  // Esquema para Recurso (Resource)
  resource: {
    title: 'Recurso',
    icon: 'üíé',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      location: { type: 'text', label: 'Localiza√ß√£o', required: false },
      rarity: { type: 'select', label: 'Raridade', options: ['Comum', 'Incomum', 'Raro', 'Muito Raro', 'Lend√°rio'], required: false },
      value: { type: 'text', label: 'Valor', required: false },
      uses: { type: 'textarea', label: 'Usos', required: false },
      extraction: { type: 'textarea', label: 'Extra√ß√£o', required: false },
      trade: { type: 'textarea', label: 'Com√©rcio', required: false },
      impact: { type: 'textarea', label: 'Impacto', required: false },
      regulations: { type: 'textarea', label: 'Regulamenta√ß√µes', required: false }
    }
  },

  // Esquema para Tecnologia (Technology)
  technology: {
    title: 'Tecnologia',
    icon: '‚öôÔ∏è',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      inventor: { type: 'text', label: 'Inventor', required: false },
      year: { type: 'text', label: 'Ano', required: false },
      materials: { type: 'textarea', label: 'Materiais', required: false },
      process: { type: 'textarea', label: 'Processo', required: false },
      applications: { type: 'textarea', label: 'Aplica√ß√µes', required: false },
      limitations: { type: 'textarea', label: 'Limita√ß√µes', required: false },
      impact: { type: 'textarea', label: 'Impacto', required: false },
      distribution: { type: 'textarea', label: 'Distribui√ß√£o', required: false },
      maintenance: { type: 'textarea', label: 'Manuten√ß√£o', required: false }
    }
  },

  // Esquema para Governo (Government)
  government: {
    title: 'Governo',
    icon: 'üèõÔ∏è',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      leader: { type: 'text', label: 'L√≠der', required: false },
      structure: { type: 'textarea', label: 'Estrutura', required: false },
      laws: { type: 'textarea', label: 'Leis', required: false },
      military: { type: 'textarea', label: 'Militar', required: false },
      economy: { type: 'textarea', label: 'Economia', required: false },
      foreignPolicy: { type: 'textarea', label: 'Pol√≠tica Externa', required: false },
      stability: { type: 'text', label: 'Estabilidade', required: false },
      corruption: { type: 'textarea', label: 'Corrup√ß√£o', required: false },
      challenges: { type: 'textarea', label: 'Desafios', required: false }
    }
  },

  // Esquema para Economia (Economy)
  economy: {
    title: 'Economia',
    icon: 'üí∞',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      currency: { type: 'text', label: 'Moeda', required: false },
      trade: { type: 'textarea', label: 'Com√©rcio', required: false },
      resources: { type: 'textarea', label: 'Recursos', required: false },
      industries: { type: 'textarea', label: 'Ind√∫strias', required: false },
      wealth: { type: 'text', label: 'Riqueza', required: false },
      inequality: { type: 'textarea', label: 'Desigualdade', required: false },
      regulations: { type: 'textarea', label: 'Regulamenta√ß√µes', required: false },
      challenges: { type: 'textarea', label: 'Desafios', required: false },
      opportunities: { type: 'textarea', label: 'Oportunidades', required: false }
    }
  },

  // Esquema para Personagem (Character)
  character: {
    title: 'Personagem',
    icon: 'üë§',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      role: { type: 'text', label: 'Papel', required: false },
      age: { type: 'text', label: 'Idade', required: false },
      gender: { type: 'text', label: 'G√™nero', required: false },
      appearance: { type: 'textarea', label: 'Apar√™ncia', required: false },
      personality: { type: 'textarea', label: 'Personalidade', required: false },
      background: { type: 'textarea', label: 'Hist√≥rico', required: false },
      motivation: { type: 'textarea', label: 'Motiva√ß√£o', required: false },
      goals: { type: 'textarea', label: 'Objetivos', required: false },
      fears: { type: 'textarea', label: 'Medos', required: false },
      strengths: { type: 'textarea', label: 'For√ßas', required: false },
      weaknesses: { type: 'textarea', label: 'Fraquezas', required: false },
      relationships: { type: 'textarea', label: 'Relacionamentos', required: false },
      development: { type: 'textarea', label: 'Desenvolvimento', required: false },
      region: { type: 'text', label: 'Regi√£o', required: false },
      occupation: { type: 'text', label: 'Ocupa√ß√£o', required: false },
      skills: { type: 'textarea', label: 'Habilidades', required: false },
      equipment: { type: 'textarea', label: 'Equipamentos', required: false },
      secrets: { type: 'textarea', label: 'Segredos', required: false },
      quotes: { type: 'textarea', label: 'Frases', required: false },
      notes: { type: 'textarea', label: 'Notas', required: false }
    }
  },

  // Esquema para Item de Lore (Lore Item)
  loreItem: {
    title: 'Item de Lore',
    icon: 'üìö',
    fields: {
      name: { type: 'text', label: 'Nome', required: true },
      type: { type: 'text', label: 'Tipo', required: true },
      description: { type: 'textarea', label: 'Descri√ß√£o', required: true },
      origin: { type: 'textarea', label: 'Origem', required: false },
      significance: { type: 'textarea', label: 'Significado', required: false },
      connections: { type: 'textarea', label: 'Conex√µes', required: false },
      secrets: { type: 'textarea', label: 'Segredos', required: false },
      impact: { type: 'textarea', label: 'Impacto', required: false },
      variations: { type: 'textarea', label: 'Varia√ß√µes', required: false },
      sources: { type: 'textarea', label: 'Fontes', required: false },
      notes: { type: 'textarea', label: 'Notas', required: false },
      // Campos espec√≠ficos para diferentes tipos de lore
      characters: { type: 'textarea', label: 'Personagens', required: false },
      moral: { type: 'textarea', label: 'Moral', required: false },
      locations: { type: 'textarea', label: 'Locais', required: false },
      power: { type: 'textarea', label: 'Poderes', required: false },
      history: { type: 'textarea', label: 'Hist√≥ria', required: false },
      location: { type: 'text', label: 'Localiza√ß√£o', required: false },
      steps: { type: 'textarea', label: 'Passos', required: false },
      requirements: { type: 'textarea', label: 'Requisitos', required: false },
      effects: { type: 'textarea', label: 'Efeitos', required: false }
    }
  }
};

// Fun√ß√µes utilit√°rias para trabalhar com os esquemas
export const SchemaUtils = {
  // Obt√©m o esquema para um tipo espec√≠fico
  getSchema(itemType) {
    return WORLD_BUILDER_SCHEMAS[itemType] || null;
  },

  // Obt√©m todos os tipos dispon√≠veis
  getAvailableTypes() {
    return Object.keys(WORLD_BUILDER_SCHEMAS);
  },

  // Obt√©m os campos obrigat√≥rios para um tipo
  getRequiredFields(itemType) {
    const schema = this.getSchema(itemType);
    if (!schema) return [];
    
    return Object.entries(schema.fields)
      .filter(([_, config]) => config.required)
      .map(([field, _]) => field);
  },

  // Obt√©m os campos opcionais para um tipo
  getOptionalFields(itemType) {
    const schema = this.getSchema(itemType);
    if (!schema) return [];
    
    return Object.entries(schema.fields)
      .filter(([_, config]) => !config.required)
      .map(([field, _]) => field);
  },

  // Cria um objeto vazio com a estrutura correta para um tipo
  createEmptyItem(itemType) {
    const schema = this.getSchema(itemType);
    if (!schema) return null;

    const emptyItem = {
      name: '',
      generatedBy: 'AI',
      createdAt: new Date().toISOString()
    };

    // Adiciona campos baseados no esquema
    Object.entries(schema.fields).forEach(([field, config]) => {
      switch (config.type) {
        case 'array':
          emptyItem[field] = [];
          break;
        case 'object':
          emptyItem[field] = {};
          break;
        default:
          emptyItem[field] = '';
      }
    });

    return emptyItem;
  },

  // Valida se um item tem a estrutura correta
  validateItem(item, itemType) {
    const schema = this.getSchema(itemType);
    if (!schema) return { valid: false, errors: ['Tipo de item inv√°lido'] };

    const errors = [];
    const requiredFields = this.getRequiredFields(itemType);

    // Verifica campos obrigat√≥rios
    requiredFields.forEach(field => {
      if (!item[field] || item[field].toString().trim() === '') {
        errors.push(`Campo "${schema.fields[field].label}" √© obrigat√≥rio`);
      }
    });

    return {
      valid: errors.length === 0,
      errors
    };
  },

  // Normaliza um item para garantir que tenha todos os campos necess√°rios
  normalizeItem(item, itemType) {
    const schema = this.getSchema(itemType);
    if (!schema) return item;

    const normalized = { ...item };

    // Garante que todos os campos do esquema existam
    Object.entries(schema.fields).forEach(([field, config]) => {
      if (!(field in normalized)) {
        switch (config.type) {
          case 'array':
            normalized[field] = [];
            break;
          case 'object':
            normalized[field] = {};
            break;
          default:
            normalized[field] = '';
        }
      }
    });

    // Garante campos padr√£o
    if (!normalized.generatedBy) {
      normalized.generatedBy = 'AI';
    }
    if (!normalized.createdAt) {
      normalized.createdAt = new Date().toISOString();
    }

    return normalized;
  }
};

// Exporta tamb√©m como default para compatibilidade
export default WORLD_BUILDER_SCHEMAS;
